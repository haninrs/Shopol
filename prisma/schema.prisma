// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Store {
  id     String @id @default(uuid())
  name   String
  userId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relation
  banners  Banner[]
  Category Category[]
  Product  Product[]
}

model Banner {
  id      String @id @default(uuid())
  storeId String
  label   String
  imgUrl  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relation
  store      Store      @relation(fields: [storeId], references: [id])
  categories Category[]

  @@index([storeId])
}

model Category {
  id       String @id @default(uuid())
  storeId  String
  bannerId String
  name     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relation
  store   Store     @relation(fields: [storeId], references: [id])
  banner  Banner    @relation(fields: [bannerId], references: [id])
  Product Product[]

  @@index([storeId])
  @@index([bannerId])
}

model Product {
  id         String   @id @default(uuid())
  storeId    String
  categoryId String
  name       String
  price      Decimal
  isFeatured Boolean  @default(false)
  isArchived Boolean  @default(false)
  images     Image[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  store    Store    @relation(fields: [storeId], references: [id])
  category Category @relation(fields: [categoryId], references: [id])

  @@index([storeId])
  @@index([categoryId])
}

model Image {
  id        String   @unique @default(uuid())
  productId String
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@index([productId])
}
